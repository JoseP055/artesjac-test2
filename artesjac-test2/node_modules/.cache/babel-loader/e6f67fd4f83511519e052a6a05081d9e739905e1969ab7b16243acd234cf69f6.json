{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\Desktop\\\\JAC TEST2\\\\artesjac-test2\\\\artesjac-test2\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// Importamos React y el hook useState para manejar el estado del formulario\nimport React, { useState } from 'react';\n\n// Importamos los estilos (si no usas CSS, puedes omitir esta línea)\nimport './Login.css';\n\n// Definimos el componente funcional Login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // Estados para almacenar los valores del formulario\n  const [email, setEmail] = useState(''); // Almacena el valor del campo correo\n  const [password, setPassword] = useState(''); // Almacena el valor del campo contraseña\n\n  // Estado para mostrar mensajes de error\n  const [error, setError] = useState('');\n\n  // Estado para controlar si se está procesando el login (ej. para deshabilitar botón)\n  const [loading, setLoading] = useState(false);\n\n  // Función que se ejecuta cuando el usuario envía el formulario\n  const handleLogin = e => {\n    e.preventDefault(); // Evita que la página se recargue al enviar el formulario\n    setLoading(true); // Activamos el estado de carga\n    setError(''); // Limpiamos cualquier mensaje de error anterior\n\n    // Validación simple: comprobamos que ambos campos estén llenos\n    if (!email || !password) {\n      setError('Por favor, ingresa tu correo y contraseña.');\n      setLoading(false); // Detenemos la carga si hay un error\n      return; // Salimos de la función si faltan datos\n    }\n\n    // Simulamos una llamada a una API con setTimeout\n    setTimeout(() => {\n      // Aquí iría la lógica real para autenticar al usuario (fetch o axios)\n\n      // Credenciales de ejemplo para prueba local\n      if (email === 'test@example.com' && password === '123456') {\n        alert('Inicio de sesión exitoso');\n        // Aquí puedes:\n        // - Guardar un token en localStorage\n        // - Redirigir al usuario a otra página\n        // - Actualizar el contexto global de autenticación\n      } else {\n        setError('Correo o contraseña incorrectos.');\n      }\n\n      // Terminamos el estado de carga\n      setLoading(false);\n    }, 1000); // Simulamos un retraso de 1 segundo\n  };\n\n  // Renderizado del componente\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Correo electr\\xF3nico:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value) // Captura cambios en el input\n          ,\n          placeholder: \"ejemplo@dominio.com\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Contrase\\xF1a:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Cargando...' : 'Ingresar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n// Exportamos el componente para usarlo en App.js u otros archivos\n_s(Login, \"G/T6+fVRpp/0AVvTYcd6/2PGde0=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","handleLogin","e","preventDefault","setTimeout","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/adria/Desktop/JAC TEST2/artesjac-test2/artesjac-test2/src/pages/LoginPage.js"],"sourcesContent":["// Importamos React y el hook useState para manejar el estado del formulario\r\nimport React, { useState } from 'react';\r\n\r\n// Importamos los estilos (si no usas CSS, puedes omitir esta línea)\r\nimport './Login.css';\r\n\r\n// Definimos el componente funcional Login\r\nconst Login = () => {\r\n    // Estados para almacenar los valores del formulario\r\n    const [email, setEmail] = useState('');       // Almacena el valor del campo correo\r\n    const [password, setPassword] = useState(''); // Almacena el valor del campo contraseña\r\n\r\n    // Estado para mostrar mensajes de error\r\n    const [error, setError] = useState('');\r\n\r\n    // Estado para controlar si se está procesando el login (ej. para deshabilitar botón)\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // Función que se ejecuta cuando el usuario envía el formulario\r\n    const handleLogin = (e) => {\r\n        e.preventDefault(); // Evita que la página se recargue al enviar el formulario\r\n        setLoading(true);   // Activamos el estado de carga\r\n        setError('');       // Limpiamos cualquier mensaje de error anterior\r\n\r\n        // Validación simple: comprobamos que ambos campos estén llenos\r\n        if (!email || !password) {\r\n            setError('Por favor, ingresa tu correo y contraseña.');\r\n            setLoading(false); // Detenemos la carga si hay un error\r\n            return;            // Salimos de la función si faltan datos\r\n        }\r\n\r\n        // Simulamos una llamada a una API con setTimeout\r\n        setTimeout(() => {\r\n            // Aquí iría la lógica real para autenticar al usuario (fetch o axios)\r\n\r\n            // Credenciales de ejemplo para prueba local\r\n            if (email === 'test@example.com' && password === '123456') {\r\n                alert('Inicio de sesión exitoso');\r\n                // Aquí puedes:\r\n                // - Guardar un token en localStorage\r\n                // - Redirigir al usuario a otra página\r\n                // - Actualizar el contexto global de autenticación\r\n            } else {\r\n                setError('Correo o contraseña incorrectos.');\r\n            }\r\n\r\n            // Terminamos el estado de carga\r\n            setLoading(false);\r\n        }, 1000); // Simulamos un retraso de 1 segundo\r\n    };\r\n\r\n    // Renderizado del componente\r\n    return (\r\n        <div className=\"login-container\">\r\n            {/* Formulario de inicio de sesión */}\r\n            <form className=\"login-form\" onSubmit={handleLogin}>\r\n                <h2>Iniciar Sesión</h2>\r\n\r\n                {/* Mostramos mensaje de error si lo hay */}\r\n                {error && <p className=\"error\">{error}</p>}\r\n\r\n                {/* Campo de correo electrónico */}\r\n                <div className=\"form-group\">\r\n                    <label>Correo electrónico:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)} // Captura cambios en el input\r\n                        placeholder=\"ejemplo@dominio.com\"\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                {/* Campo de contraseña */}\r\n                <div className=\"form-group\">\r\n                    <label>Contraseña:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        placeholder=\"••••••••\"\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                {/* Botón de envío, deshabilitado mientras se carga */}\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Cargando...' : 'Ingresar'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Exportamos el componente para usarlo en App.js u otros archivos\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}