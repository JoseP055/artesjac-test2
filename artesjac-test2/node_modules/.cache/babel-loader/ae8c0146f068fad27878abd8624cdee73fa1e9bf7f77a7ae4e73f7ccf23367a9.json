{"ast":null,"code":"// src/api/shop.service.js\nimport { api } from \"../api\";\n\n/**\r\n * Servicio PÚBLICO de Tienda\r\n * - Devuelve RESPUESTAS estilo axios (con .data) para ser compatible con:\r\n *   const res = await ShopAPI.list(); const list = res?.data?.data;\r\n * - Endpoints: montados bajo /api/shop en el backend.\r\n */\nexport const ShopAPI = {\n  /** Lista pública de productos activos\r\n   *  params: { q, category, sort, page, limit }\r\n   *  Respuesta axios-like: { data: { ok, data: [...], pagination: {...} } }\r\n   */\n  list: (params = {}) => api.get(\"/shop/products\", {\n    params\n  }),\n  /** Detalle por slug (recomendado) — axios-like */\n  detail: slug => api.get(`/shop/products/${slug}`),\n  /** Alias por compatibilidad si tenías get(slugOrId) en algún lado — axios-like */\n  get: slugOrId => api.get(`/shop/products/${slugOrId}`),\n  /** Reseñas públicas aprobadas — axios-like\r\n   *  params extra: { page, limit }\r\n   *  Uso: const res = await ShopAPI.reviews(productId); res.data.data -> array de reseñas\r\n   */\n  reviews: (productId, params = {}) => api.get(`/shop/reviews`, {\n    params: {\n      product: productId,\n      ...params\n    }\n  })\n};","map":{"version":3,"names":["api","ShopAPI","list","params","get","detail","slug","slugOrId","reviews","productId","product"],"sources":["C:/Users/jospa/OneDrive/Desktop/artesjac-test2/artesjac-test2/src/api/shop.service.js"],"sourcesContent":["// src/api/shop.service.js\r\nimport { api } from \"../api\";\r\n\r\n/**\r\n * Servicio PÚBLICO de Tienda\r\n * - Devuelve RESPUESTAS estilo axios (con .data) para ser compatible con:\r\n *   const res = await ShopAPI.list(); const list = res?.data?.data;\r\n * - Endpoints: montados bajo /api/shop en el backend.\r\n */\r\nexport const ShopAPI = {\r\n    /** Lista pública de productos activos\r\n     *  params: { q, category, sort, page, limit }\r\n     *  Respuesta axios-like: { data: { ok, data: [...], pagination: {...} } }\r\n     */\r\n    list: (params = {}) => api.get(\"/shop/products\", { params }),\r\n\r\n    /** Detalle por slug (recomendado) — axios-like */\r\n    detail: (slug) => api.get(`/shop/products/${slug}`),\r\n\r\n    /** Alias por compatibilidad si tenías get(slugOrId) en algún lado — axios-like */\r\n    get: (slugOrId) => api.get(`/shop/products/${slugOrId}`),\r\n\r\n    /** Reseñas públicas aprobadas — axios-like\r\n     *  params extra: { page, limit }\r\n     *  Uso: const res = await ShopAPI.reviews(productId); res.data.data -> array de reseñas\r\n     */\r\n    reviews: (productId, params = {}) =>\r\n        api.get(`/shop/reviews`, { params: { product: productId, ...params } }),\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,GAAG,QAAQ,QAAQ;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAG;EACnB;AACJ;AACA;AACA;EACIC,IAAI,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAKH,GAAG,CAACI,GAAG,CAAC,gBAAgB,EAAE;IAAED;EAAO,CAAC,CAAC;EAE5D;EACAE,MAAM,EAAGC,IAAI,IAAKN,GAAG,CAACI,GAAG,CAAC,kBAAkBE,IAAI,EAAE,CAAC;EAEnD;EACAF,GAAG,EAAGG,QAAQ,IAAKP,GAAG,CAACI,GAAG,CAAC,kBAAkBG,QAAQ,EAAE,CAAC;EAExD;AACJ;AACA;AACA;EACIC,OAAO,EAAEA,CAACC,SAAS,EAAEN,MAAM,GAAG,CAAC,CAAC,KAC5BH,GAAG,CAACI,GAAG,CAAC,eAAe,EAAE;IAAED,MAAM,EAAE;MAAEO,OAAO,EAAED,SAAS;MAAE,GAAGN;IAAO;EAAE,CAAC;AAC9E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}